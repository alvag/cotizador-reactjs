{"version":3,"sources":["components/Header.js","components/Form.js","helpers/helper.js","components/Resumen.js","components/Resultado.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","Form","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","infoAuto","marca","_this","current","value","year","plan","checked","onSubmit","this","name","ref","type","defaultChecked","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","_this$props$data","data","Resultado","result","message","react_transition_group","component","classNames","key","timeout","enter","exit","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","parseFloat","obtenerPlan","toFixed","setState","components_Header","Form_Form","Resumen_Resumen","Resultado_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2effd993.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Header = props => {\n    return (\n        <header className=\"top\">\n            <h1>{props.title}</h1>\n        </header>\n    );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nexport default class Form extends Component {\n\n    marcaRef = React.createRef();\n    yearRef = React.createRef();\n    planBasicoRef = React.createRef();\n    planCompletoRef = React.createRef();\n\n    cotizarSeguro = (e) => {\n        e.preventDefault();\n\n        const infoAuto = {\n            marca: this.marcaRef.current.value,\n            year: this.yearRef.current.value,\n            plan: this.planBasicoRef.current.checked ? 'basico' : 'completo'\n        };\n\n        this.props.cotizarSeguro(infoAuto);\n\n        //e.currentTarget.reset();\n    }\n\n    render() {\n        return (\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\n                <div className=\"campo\">\n                    <label>Marca</label>\n                    <select name=\"marca\" ref={this.marcaRef}>\n                        <option value=\"americano\">Americano</option>\n                        <option value=\"europeo\">Europeo</option>\n                        <option value=\"asiatico\">Asiatico</option>\n                    </select>\n                </div>\n\n                <div className=\"campo\">\n                    <label>Año</label>\n                    <select name=\"year\" ref={this.yearRef}>\n                        <option value=\"2018\">2018</option>\n                        <option value=\"2017\">2017</option>\n                        <option value=\"2016\">2016</option>\n                        <option value=\"2015\">2015</option>\n                        <option value=\"2014\">2014</option>\n                        <option value=\"2013\">2013</option>\n                        <option value=\"2012\">2012</option>\n                        <option value=\"2011\">2011</option>\n                        <option value=\"2010\">2010</option>\n                        <option value=\"2009\">2009</option>\n                        <option value=\"2008\">2008</option>\n                    </select>\n                </div>\n                <div className=\"campo\">\n                    <label>Plan:</label>\n                    <input ref={this.planBasicoRef} type=\"radio\" name=\"plan\" value=\"basico\" defaultChecked /> Básico\n                    <input ref={this.planCompletoRef} type=\"radio\" name=\"plan\" value=\"completo\" /> Completo\n                </div>\n\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\n            </form>\n        );\n    }\n}\n","export function obtenerDiferenciaAnio(year) {\n    return new Date().getFullYear() - year;\n}\n\nexport function calcularMarca(modelo) {\n    let incremento;\n\n    switch (modelo) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n\n    return incremento;\n}\nexport function obtenerPlan(plan) {\n    return (plan === 'basico') ? 1.20 : 1.50;\n}\nexport function primeraMayuscula(texto) {\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}\n","import React, { Component } from 'react';\nimport { primeraMayuscula } from '../helpers/helper';\n\nexport default class Resumen extends Component {\n\n    mostrarResumen = () => {\n        const { marca, plan, year } = this.props.data;\n        if (marca && plan && year) {\n            return (\n                <div className=\"resumen\">\n                    <h2>Resumen de Cotización</h2>\n                    <ul>\n                        <li>Marca: {primeraMayuscula(marca)}</li>\n                        <li>Plan: {primeraMayuscula(plan)}</li>\n                        <li>Año: {year}</li>\n                    </ul>\n                </div>\n            );\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.mostrarResumen()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nexport default class Resultado extends Component {\n\n    render() {\n        const result = this.props.result;\n        const message = !result ? 'Elije marca, año y tipo de seguro' : 'El total es $ ';\n        return (\n\n            <div className=\"gran-total\">\n                {message}\n                <TransitionGroup component=\"span\" className=\"resultado\">\n                    <CSSTransition\n                        classNames=\"resultado\"\n                        key={result}\n                        timeout={{ enter: 500, exit: 500 }}>\n                        <span>{result}</span>\n                    </CSSTransition>\n                </TransitionGroup>\n            </div>\n\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Form from './Form';\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helpers/helper';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\n\nclass App extends Component {\n\n    state = {\n        result: '',\n        data: ''\n    }\n\n    cotizarSeguro = (data) => {\n        const { marca, plan, year } = data;\n\n        let result = 2000;\n\n        const diff = obtenerDiferenciaAnio(year);\n\n        result -= ((diff * 3) * result) / 100;\n\n        result = calcularMarca(marca) * result;\n\n        result = parseFloat(obtenerPlan(plan) * result).toFixed(2);\n\n        this.setState({ result, data });\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header title=\"Cotizador de Seguro de auto\" />\n\n                <div className=\"form-container\">\n                    <Form cotizarSeguro={this.cotizarSeguro} />\n                    <Resumen\n                        data={this.state.data}\n                        result={this.state.result}\n                    />\n\n                    < Resultado result={this.state.result} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}